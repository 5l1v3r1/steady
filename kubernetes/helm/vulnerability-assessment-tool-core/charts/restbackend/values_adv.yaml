replicas: 2
licenseConfidenceThreshold: 0.2
langConfidenceThreshold: 0.2
backoffDuration: 5

# _n_ debug
# _i_
# Sets logging level for shell scripts, root logging level for springboot
debug: true

rbac:
  # _n_ rbac.create
  # _i_
  # Creates service account required to check if the postgres
  # replicas are ready by querying the Kubernetes API
  create: true

podPriorityClass:
  # _n_ podPriorityClass.spec
  # _i_
  # If .Values.global.podPriorityClass.enabled and spec is {}
  # defaults to
  #   globalDefault: false
  #   value: 10000
  #   preemptionPolicy: PreemptLowerPriority
  spec: {}

horizontalPodAutoScaler:
  enabled: true
  # _n_ horizontalPodAutoScaler.spec
  # _i_
  # If set to {} and .Values.horizontalPodAutoScaler.enabled=true
  # defaults to
  #   metrics:
  #   - type: Resource
  #     resource:
  #       name: cpu
  #       targetAverageUtilization: 80
  # Else set to a map that respects scheme defined in
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#horizontalpodautoscalerlist-v1-autoscaling
  spec: {}

persistentVolume: {}
  # storage: "2Gi"
  # nfs:
  #   # _n_ persistentVolume.nfs.server
  #   # _i_
  #   #   nfs can be set to {} and it will automatically be
  #   #   updated as to the accessMode
  #   server: ::
  #   path: /share

podDisruptionBudget:
  # _n_ podDisruptionBudget.minAvailable
  # _i_
  #    Warning :  this won't be applied unless the replicas
  #               values are >= 2
  minAvailable: 1

livenessProbe:
  # _n_ livenessProbe.enabled
  # _i_
  # High initial delay recommended due to startup time for postgres
  # statefulsets and replication to come to life
  # Overall time before container is killed by k8s :
  # initialDelaySeconds + ((periodSeconds + timeoutSeconds) * failureThreshold)
  # = 260s ~= 4.3min
  enabled: true
  initialDelaySeconds: 20
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 15

readinessProbe:
  # _n_ readinessProbe.enabled
  # _i_
  # Overall time before container is killed by k8s :
  # initialDelaySeconds + ((periodSeconds + timeoutSeconds) * failureThreshold)
  # = 95s ~= 1.5min
  enabled: true
  initialDelaySeconds: 20
  periodSeconds: 30
  timeoutSeconds: 5
  failureThreshold: 5

# Avoids provisioning containers on the same node
selfAntiAffinity:
  soft: true
  weight: 100

image:

  # ------------------------- Init Container -----------------------------------
  initContainer:
    pullPolicy: "Always"
    registry: {}
    registryPort: {}
    name: "postgres"
    # _n_ image.initContainer.tag
    # _i_
    # Alpine images for init container to reduce footprint:
    #     - size: 28MB
    tag: "11.3-alpine"

    securityContext:
      runAsUser: 65534
      runAsGroup: 65534
      privileged: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
          - ALL
        add:
          - SYS_TIME
          - NET_ADMIN

    resources:
      requests:
        memory: "25Mi"
        cpu: "100m"
      limits:
        memory: "35Mi"
        cpu: "200m"

  # ------------------------- Main Container -----------------------------------
  mainContainer:
    pullPolicy: "IfNotPresent"
    registry: {}
    registryPort: {}
    name: "vulas/vulnerability-assessment-tool-rest-backend"
    # _n_ image.mainContainer.tag
    # _i_
    #     Vulas versioning follows semver
    #     Footprint:
    #     - size: 103.3 MB
    tag: "3.1.7-SNAPSHOT"

    resources:
      limits:
        memory: "16Gi"
        cpu: "8"
      requests:
        memory: "8Gi"
        cpu: "4"

    securityContext:
      runAsUser: 0
      # runAsGroup: 12700

      privileged: false
      readOnlyRootFilesystem: false
