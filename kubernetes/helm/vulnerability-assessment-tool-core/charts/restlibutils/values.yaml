replicas: 2

# _n_ debug
# _i_
# Sets logging level for shell scripts
# and root logging level for springboot
debug: true

extraConfigs: {}

podPriorityClass:
  # _n_ podPriorityClass.spec
  # _i_
  # If .Values.global.podPriorityClass.enabled and spec is {}
  # defaults to
  #   globalDefault: false
  #   value: 500
  #   preemptionPolicy: Never
  spec: {}

horizontalPodAutoScaler:
  enabled: false
  # _n_ horizontalPodAutoScaler.spec
  # _i_
  # If set to {} and .Values.horizontalPodAutoScaler.enabled=true
  # defaults to
  #   metrics:
  #   - type: Resource
  #     resource:
  #       name: cpu
  #       targetAverageUtilization: 70
  # Else set to a map that respects scheme defined in
  # https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.10/#horizontalpodautoscalerlist-v1-autoscaling
  spec: {}

podDisruptionBudget: {}
  # # _n_ podDisruptionBudget.minAvailable
  # # _i_
  # #    Warning :  this won't be applied unless the replicas
  # #               values are >= 2
  # minAvailable: 1

# Avoid sharing nodes with similar pods
selfAntiAffinity: {}
  # soft: true
  # weight: 100

livenessProbe:
  # _n_ livenessProbe.enabled
  # _i_
  # Overall time before container is considered unready by k8s :
  # initialDelaySeconds + ((periodSeconds + timeoutSeconds) * successThreshold)
  # = 410s ~= 7min
  enabled: true
  initialDelaySeconds: 25
  periodSeconds: 5
  timeoutSeconds: 5
  failureThreshold: 5

readinessProbe:
  # _n_ readinessProbe.enabled
  # _i_
  # Overall time before container is considered unready by k8s :
  # initialDelaySeconds + ((periodSeconds + timeoutSeconds) * successThreshold)
  # = 150s ~= 2.5min
  enabled: true
  initialDelaySeconds: 20
  periodSeconds: 15
  timeoutSeconds: 5
  failureThreshold: 5

#================================= Resources =======================================
# RWO is possible but mounting an nfs with RWM
# allows patcheval caches to share the same data
# thus allowing for a gain in performance
persistentVolume: {}
  # storage: "2Gi"
  # mountPath: /.m2
  # nfs:
  #   # _n_ persistentVolume.nfs.server
  #   # _i_
  #   #   nfs can be set to {} and it will automatically be
  #   #   updated as to the accessMode
  #   server: ::
  #   path: /share

#================================= Image =======================================
image:
  pullPolicy: "IfNotPresent"
  registry: {}
  registryPort: {}
  name: "vulas/vulnerability-assessment-tool-rest-lib-utils"
  tag: "3.1.7-SNAPSHOT"

  resources: {}
    # limits:
    #   memory: "16Gi"
    #   cpu: "8"
    # requests:
    #   memory: "8Gi"
    #   cpu: "2"

  securityContext: {}
    # runAsUser: 12000
    # runAsGroup: 12000
    # privileged: false
    # readOnlyRootFilesystem: false
    # # capabilities:
    # #   drop:
    # #     - ALL
    # #   add:
    # #     - DAC_OVERRIDE
    # #     - SYS_TIME
    # #     - NET_ADMIN
